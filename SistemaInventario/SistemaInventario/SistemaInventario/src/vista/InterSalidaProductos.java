/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import controlador.Ctrl_SalidaProductos;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.SalidaRecursos;
import controlador.Ctrl_SalidaRecursos;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.Date;
import modelo.SalidaProductos;


public class InterSalidaProductos extends javax.swing.JInternalFrame {

    private int IDSALIDAPRODUCTOS;
    int obtenerIdClienteCombo = 0;
    int obtenerIDPRODUCTOCombo = 0;

    /**
     * Creates new form InterSalidaRecursos
     */
    public InterSalidaProductos() {
        initComponents();
        this.setSize(new Dimension(750, 600));
        this.setTitle("Salida de Producto");
        
        this.CargarTablaSalidaProductos();
        this.CargarComboCliente();
        this.CargarComboProducto();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Cantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_SalidaProducto = new javax.swing.JTable();
        jButton_GenerarReporte = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Eliminar = new javax.swing.JButton();
        jButton_REGISTRAR = new javax.swing.JButton();
        jComboBox_CLIENTE = new javax.swing.JComboBox<>();
        jComboBox_PRODU = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_CODIGO = new javax.swing.JTextField();
        txt_COLOR = new javax.swing.JTextField();
        txt_TALLA = new javax.swing.JTextField();
        txt_CANTIDAD_DIS = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Salida de Productos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Cliente:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 150, -1));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Producto:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Cantidad:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, 20));
        getContentPane().add(txt_Cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 170, -1));

        jTable_SalidaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_SalidaProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SalidaProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_SalidaProducto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 680, 190));

        jButton_GenerarReporte.setBackground(new java.awt.Color(51, 255, 255));
        jButton_GenerarReporte.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_GenerarReporte.setText("Generar Reporte");
        jButton_GenerarReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_GenerarReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_GenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GenerarReporteActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_GenerarReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 520, 170, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Actualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Actualizar.setText("ACTUALIZAR");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        jButton_Eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Eliminar.setText("ELIMINAR");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 120, 30));

        jButton_REGISTRAR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_REGISTRAR.setText("REGISTRAR");
        jButton_REGISTRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_REGISTRARActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_REGISTRAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 120, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 180, 140));

        jComboBox_CLIENTE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Cliente" }));
        getContentPane().add(jComboBox_CLIENTE, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 220, -1));

        jComboBox_PRODU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Producto" }));
        getContentPane().add(jComboBox_PRODU, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 220, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel5.setText("Codigo:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));
        getContentPane().add(txt_CODIGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 220, -1));
        getContentPane().add(txt_COLOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 220, -1));
        getContentPane().add(txt_TALLA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 220, -1));
        getContentPane().add(txt_CANTIDAD_DIS, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 220, -1));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel6.setText("Color:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel7.setText("Talla:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel8.setText("Cantidad Disponible:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_SalidaProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SalidaProductoMouseClicked

        
    }//GEN-LAST:event_jTable_SalidaProductoMouseClicked

    private void jButton_GenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GenerarReporteActionPerformed
        
    }//GEN-LAST:event_jButton_GenerarReporteActionPerformed

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed

        String cliente="";
        cliente =jComboBox_CLIENTE.getSelectedItem().toString().trim();
        String produ="";
        produ =jComboBox_PRODU.getSelectedItem().toString().trim();
        if (txt_Cantidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }else{
            try {
                SalidaProductos salidaProductos = new SalidaProductos();
                Ctrl_SalidaProductos controlSalidaProductos = new Ctrl_SalidaProductos();
                
                salidaProductos.setCLIENTE(jComboBox_CLIENTE.getSelectedItem().toString().trim());
                salidaProductos.setPRODUCTOS(jComboBox_PRODU.getSelectedItem().toString().trim());
                salidaProductos.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText()));
                salidaProductos.setESTADO(1);

                if (controlSalidaProductos.actualizar(salidaProductos,IDSALIDAPRODUCTOS)) {
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    this.CargarTablaSalidaProductos();
                    this.Limpiar();      
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Actualizar");
                }

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }
   
   
        }
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed
        Ctrl_SalidaProductos controlSalidaProductos = new Ctrl_SalidaProductos();
        if (IDSALIDAPRODUCTOS == 0) {
            JOptionPane.showMessageDialog(null, "¡Seleccione Correctamente!");
        } else {
            if (!controlSalidaProductos.eliminar(IDSALIDAPRODUCTOS)) {
                JOptionPane.showMessageDialog(null, "¡Salida de producto Eliminado!");
                this.CargarTablaSalidaProductos();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¡Error al eliminar salida de productos!");
            }
        }
    }//GEN-LAST:event_jButton_EliminarActionPerformed

    private void jButton_REGISTRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_REGISTRARActionPerformed
        // TODO add your handling code here:
        SalidaProductos salidaProductos = new SalidaProductos();
        Ctrl_SalidaProductos controlSalidaProductos = new Ctrl_SalidaProductos();
        String cliente="";
        cliente =jComboBox_CLIENTE.getSelectedItem().toString().trim();
        String produ="";
        produ =jComboBox_PRODU.getSelectedItem().toString().trim();
        
        if (txt_Cantidad.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }else{
            try {
                salidaProductos.setCLIENTE(jComboBox_CLIENTE.getSelectedItem().toString().trim());
                salidaProductos.setPRODUCTOS(jComboBox_PRODU.getSelectedItem().toString().trim());
                salidaProductos.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText()));
                salidaProductos.setESTADO(1);

                if (controlSalidaProductos.guardar(salidaProductos)) {
                    JOptionPane.showMessageDialog(null, "Registro Guardado");  
                    this.CargarTablaSalidaProductos();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Guardar");
                }

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }
        }
    }//GEN-LAST:event_jButton_REGISTRARActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JButton jButton_GenerarReporte;
    private javax.swing.JButton jButton_REGISTRAR;
    private javax.swing.JComboBox<String> jComboBox_CLIENTE;
    private javax.swing.JComboBox<String> jComboBox_PRODU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_SalidaProducto;
    private javax.swing.JTextField txt_CANTIDAD_DIS;
    private javax.swing.JTextField txt_CODIGO;
    private javax.swing.JTextField txt_COLOR;
    private javax.swing.JTextField txt_Cantidad;
    private javax.swing.JTextField txt_TALLA;
    // End of variables declaration//GEN-END:variables

    private void Limpiar() {
        jComboBox_CLIENTE.setSelectedItem("Seleccione Cliente");
        jComboBox_PRODU.setSelectedItem("Seleccione Producto");
        txt_Cantidad.setText("");

    }

    private void CargarTablaSalidaProductos() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select IDSALIDAPRODUCTOS, CLIENTE, PRODUCTO, CANTIDAD, ESTADO from SALIPRODTABLA";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterSalidaProductos.jTable_SalidaProducto = new JTable(model);
            InterSalidaProductos.jScrollPane1.setViewportView(InterSalidaProductos.jTable_SalidaProducto);

            model.addColumn("N°");//ID
            model.addColumn("CLIENTE");
            model.addColumn("PRODUCTO");
            model.addColumn("CANTIDAD");
            model.addColumn("ESTADO");

            while (rs.next()) {

                Object fila[] = new Object[5];
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Salida de Producto: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_SalidaProducto.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_SalidaProducto.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDSALIDAPRODUCTOS = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosSalidaProductosSeleccionado(IDSALIDAPRODUCTOS);//metodo
                }
            }
        });
    }

    private void EnviarDatosSalidaProductosSeleccionado(int IDSALIDAPRODUCTOS) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from SALIPRODTABLA where IDSALIDAPRODUCTOS = '" + IDSALIDAPRODUCTOS + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                int idclien = rs.getInt("IDSALIDAPRODUCTOS");
                jComboBox_CLIENTE.setSelectedItem(relacionarCliente(idclien));
                int idproduc = rs.getInt("IDSALIDAPRODUCTOS");
                jComboBox_PRODU.setSelectedItem(relacionarProducto(idproduc));
                txt_Cantidad.setText(rs.getString("CANTIDAD"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar Salida de Producto: " + e);
        }
    }
    String NombreCliente="";
    private String relacionarCliente(int IdCliente) {

        String sql = "select nombre from tb_cliente where idCliente = '" + IdCliente + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreCliente = rs.getString("nombre");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¡Error al obtener el id del cliente!");
        }
        return NombreCliente;
    }
    private int IdCliente() {
        String sql = "select * from tb_cliente where nombre = '" + this.jComboBox_CLIENTE.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdClienteCombo = rs.getInt("idCliente");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener idCliente");
        }
        return obtenerIdClienteCombo;
    }
    private void CargarComboCliente() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_cliente";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_CLIENTE.removeAllItems();
            jComboBox_CLIENTE.addItem("Seleccione Cliente:");
            while (rs.next()) {
                jComboBox_CLIENTE.addItem(rs.getString("nombre"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¡Error al cargar cliente !" + e);
        }
    }
    String NombreProducto ="";
    private String relacionarProducto(int IDPRODUCTO) {

        String sql = "select NOMBRE from tb_producto where IDPRODUCTO = '" + IDPRODUCTO + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreProducto = rs.getString("NOMBRE");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¡Error al obtener el id del Producto!");
        }
        return NombreProducto;
    }
    private int IdProducto() {
        String sql = "select * from tb_producto where NOMBRE = '" + this.jComboBox_PRODU.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIDPRODUCTOCombo = rs.getInt("IDPRODUCTO");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener IDPRODUCTO");
        }
        return obtenerIDPRODUCTOCombo;
    }
    private void CargarComboProducto() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_producto";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_PRODU.removeAllItems();
            jComboBox_PRODU.addItem("Seleccione Producto:");
            while (rs.next()) {
                jComboBox_PRODU.addItem(rs.getString("NOMBRE"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¡Error al cargar producto !" + e);
        }
    }

}
