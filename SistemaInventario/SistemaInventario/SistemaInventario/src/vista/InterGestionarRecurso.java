
package vista;

import conexion.Conexion;
import controlador.Ctrl_Producto;
import controlador.Ctrl_Recurso;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Recursos;
import static vista.InterGestionarProducto.jTable_productos;
import static vista.InterGestionarRecurso.jTable_recursos;

/**
 *
 * @author XIOMARA
 */
public class InterGestionarRecurso extends javax.swing.JInternalFrame {

    private int IDRECURSO; //usar metodo actualizar
    int obtenerIDCATEGORIARECURSOSCombo = 0;    
    
    public InterGestionarRecurso() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Recursos");
        //Cargar tabla
        this.CargarTablaRecursos();
        this.CargarComboCategoriasRecurso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_recursos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel_nombre = new javax.swing.JLabel();
        txt_NOMBRE = new javax.swing.JTextField();
        jLabel_precio = new javax.swing.JLabel();
        jLabel_color = new javax.swing.JLabel();
        jLabel_tipo = new javax.swing.JLabel();
        jLabel_categoria = new javax.swing.JLabel();
        txt_COLOR = new javax.swing.JTextField();
        txt_DESCRIPCION = new javax.swing.JTextField();
        jComboBox_CATEGORIA = new javax.swing.JComboBox<>();
        txt_CODIGO = new javax.swing.JTextField();
        txt_buscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel_wallpaper1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Gestionar Recurso");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_recursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_recursos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_nombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_nombre.setText("Nombre:");
        jPanel3.add(jLabel_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, -1));

        txt_NOMBRE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_NOMBRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 170, -1));

        jLabel_precio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_precio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_precio.setText("Codigo:");
        jPanel3.add(jLabel_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 90, -1));

        jLabel_color.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_color.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_color.setText("Color:");
        jPanel3.add(jLabel_color, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 90, -1));

        jLabel_tipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_tipo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_tipo.setText("Descripci√≥n:");
        jPanel3.add(jLabel_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 90, -1));

        jLabel_categoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_categoria.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_categoria.setText("Categoria:");
        jPanel3.add(jLabel_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 90, -1));

        txt_COLOR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_COLOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 170, -1));

        txt_DESCRIPCION.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_DESCRIPCION, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 170, -1));

        jComboBox_CATEGORIA.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_CATEGORIA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione categoria:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_CATEGORIA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CATEGORIAActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox_CATEGORIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 170, -1));

        txt_CODIGO.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_CODIGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 170, -1));

        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscarKeyReleased(evt);
            }
        });
        jPanel3.add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 170, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Buscar:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(jLabel_wallpaper1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        Recursos recurso = new Recursos();
        Ctrl_Recurso controlRecurso = new Ctrl_Recurso();
        String categoria = "";
        categoria = jComboBox_CATEGORIA.getSelectedItem().toString().trim();
        if (txt_CODIGO.getText().equals("") || txt_NOMBRE.getText().equals("") || 
            txt_DESCRIPCION.getText().equals("") || txt_COLOR.getText().equals("") ) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");

        } else {
            if (categoria.equalsIgnoreCase("Seleccione categoria:")) {
                JOptionPane.showMessageDialog(null, "Seleccione categoria");
            } else {
                try {
                    recurso.setCODIGO(txt_CODIGO.getText().trim());
                    recurso.setNOMBRE(txt_NOMBRE.getText().trim());                  
                    this.IdCategoriaRecurso();
                    recurso.setIDCATEGORIARECURSO(obtenerIDCATEGORIARECURSOSCombo);
                    recurso.setDESCRIPCION(txt_DESCRIPCION.getText().trim());
                    recurso.setCOLOR(txt_COLOR.getText().trim());
                    
                    ////////////////////////////////////

                    if (controlRecurso.actualizar(recurso, IDRECURSO)) {
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");
                        //CARGARCATEGORIAS
                        this.CargarComboCategoriasRecurso();
                        this.CargarTablaRecursos();
                        this.Limpiar();

                    } else {
                        JOptionPane.showMessageDialog(null, "Error al Actualizar");
                    }

                } catch (HeadlessException | NumberFormatException e) {
                    System.out.println("Error en: " + e);
                }
            }
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        Ctrl_Recurso controlRecurso = new Ctrl_Recurso();
        if (IDRECURSO == 0) {
            JOptionPane.showMessageDialog(null, "¬°Seleccione un Recurso!");
        } else {
            if (!controlRecurso.eliminar(IDRECURSO)) {
                JOptionPane.showMessageDialog(null, "¬°Recurso Eliminado!");
                this.CargarTablaRecursos();
                this.CargarComboCategoriasRecurso();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¬°Error al eliminar recurso!");
            }
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void txt_buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyReleased
        BuscarRecurso(txt_buscar.getText());
    }//GEN-LAST:event_txt_buscarKeyReleased

    private void jComboBox_CATEGORIAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CATEGORIAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_CATEGORIAActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JComboBox<String> jComboBox_CATEGORIA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_categoria;
    private javax.swing.JLabel jLabel_color;
    private javax.swing.JLabel jLabel_nombre;
    private javax.swing.JLabel jLabel_precio;
    private javax.swing.JLabel jLabel_tipo;
    private javax.swing.JLabel jLabel_wallpaper1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_recursos;
    private javax.swing.JTextField txt_CODIGO;
    private javax.swing.JTextField txt_COLOR;
    private javax.swing.JTextField txt_DESCRIPCION;
    private javax.swing.JTextField txt_NOMBRE;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables

    
    /*
     * *****************************************************
     * metodo para limpiar
     * *****************************************************
     */
    private void Limpiar() {
        txt_NOMBRE.setText("");
        jComboBox_CATEGORIA.setSelectedItem("Seleccione categoria:");
        txt_COLOR.setText("");
        txt_DESCRIPCION.setText("");
        txt_CODIGO.setText("");
        
    }

    /*
     * *****************************************************
     * metodo para cargar las categorias en el JCombox
     * *****************************************************
     */
    private void CargarComboCategoriasRecurso() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_categoria_recursos";
        Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_CATEGORIA.removeAllItems();
            jComboBox_CATEGORIA.addItem("Seleccione categoria:");
            while (rs.next()) {
                jComboBox_CATEGORIA.addItem(rs.getString("NOMBRE"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias");
        }
    }

    /*
     * *****************************************************
     * metodo para mostrar todos los productos registrados
     * *****************************************************
     */
    String NombreCategoriaRecurso = "";

    private void CargarTablaRecursos() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select p.IDRECURSO, p.CODIGO, p.NOMBRE, c.NOMBRE, p.DESCRIPCION, p.COLOR, p.ESTADO from tb_recursos As p, tb_categoria_recursos As c where p.IDCATEGORIARECURSOS = c.IDCATEGORIARECURSOS;";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarRecurso.jTable_recursos = new JTable(model);
            InterGestionarRecurso.jScrollPane1.setViewportView(InterGestionarRecurso.jTable_recursos);

            model.addColumn("N¬∞");//ID
            model.addColumn("CODIGO");
            model.addColumn("NOMBRE");
            model.addColumn("CATEGORIA");
            model.addColumn("DESCRIPCION");
            model.addColumn("COLOR");
            model.addColumn("ESTADO");

            while (rs.next()) {

                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla recursos: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_recursos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_recursos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDRECURSO = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosRecursosSeleccionado(IDRECURSO);//metodo
                }
            }
        });
    }


    /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
    private void EnviarDatosRecursosSeleccionado(int IDRECURSO) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from tb_recursos where IDRECURSO = '" + IDRECURSO + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_CODIGO.setText(rs.getString("CODIGO"));
                txt_NOMBRE.setText(rs.getString("NOMBRE"));
                int idCateRec = rs.getInt("IDCATEGORIARECURSOS");
                jComboBox_CATEGORIA.setSelectedItem(relacionarCategoria(idCateRec));
                txt_COLOR.setText(rs.getString("COLOR"));
                txt_DESCRIPCION.setText(rs.getString("DESCRIPCION"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar recurso: " + e);
        }
    }

    /*
     * **************************************************
     * Metodo para relacionar categorias
     * **************************************************
     */
    private String relacionarCategoria(int IDCATEGORIARECURSOS) {

        String sql = "select NOMBRE from tb_categoria_recursos where IDCATEGORIARECURSOS = '" + IDCATEGORIARECURSOS + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreCategoriaRecurso = rs.getString("NOMBRE");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¬°Error al obtener el id de la categoria!");
        }
        return NombreCategoriaRecurso;
    }

    /**
     *
     * Metodo para obtener id categoria
     */
    private int IdCategoriaRecurso() {
        String sql = "select * from tb_categoria_recursos where NOMBRE = '" + this.jComboBox_CATEGORIA.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIDCATEGORIARECURSOSCombo = rs.getInt("IDCATEGORIARECURSOS");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener IDCATEGORIARECURSOS");
        }
        return obtenerIDCATEGORIARECURSOSCombo;
    }
    
    public void BuscarRecurso(String buscar){
        Ctrl_Recurso ctrl_Recurso=new Ctrl_Recurso();
        DefaultTableModel modelo=ctrl_Recurso.buscarRecursos(buscar);
        jTable_recursos.setModel(modelo);
    }
}
