/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.IngresoProducto;
import controlador.Ctrl_IngresoProducto;
import controlador.IngresoProductoPDF;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author julio
 */
public class InterIngresoProducto extends javax.swing.JInternalFrame {

    private int IDINGRESOPRODUCTO;
    int obtenerIDPPRODUCTOCombo = 0;

    /**
     * Creates new form InterSalidaRecursos
     */
    public InterIngresoProducto() {
        initComponents();
        this.setSize(new Dimension(750, 600));
        this.setTitle("Ingreso de Productos");

        this.CargarTablaIngresodeProductos();
        this.CargarComboProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Color = new javax.swing.JTextField();
        txt_EmpSer = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_IngresoProductos = new javax.swing.JTable();
        jButton_GenerarReporte = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Eliminar = new javax.swing.JButton();
        jButton_REGISTRAR = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_Talla = new javax.swing.JTextField();
        txt_Cantidad = new javax.swing.JTextField();
        txt_cantidadDefec = new javax.swing.JTextField();
        jComboBox_PRODUCTO = new javax.swing.JComboBox<>();
        txt_CODIGO = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        txt_NOMBRE = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Ingreso de Productos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Responsable:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 160, -1));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Producto:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 160, -1));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Cantidad Esta. Defectuoso:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        txt_Color.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ColorKeyPressed(evt);
            }
        });
        getContentPane().add(txt_Color, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 220, -1));

        txt_EmpSer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_EmpSerKeyPressed(evt);
            }
        });
        getContentPane().add(txt_EmpSer, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 220, -1));

        jTable_IngresoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_IngresoProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_IngresoProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_IngresoProductos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 680, 190));

        jButton_GenerarReporte.setBackground(new java.awt.Color(51, 255, 255));
        jButton_GenerarReporte.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_GenerarReporte.setText("Generar Reporte");
        jButton_GenerarReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_GenerarReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_GenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GenerarReporteActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_GenerarReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 530, 170, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Actualizar.setBackground(new java.awt.Color(0, 204, 0));
        jButton_Actualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Actualizar.jpg"))); // NOI18N
        jButton_Actualizar.setText("ACTUALIZAR");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        jButton_Eliminar.setBackground(new java.awt.Color(204, 0, 0));
        jButton_Eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Eliminar.jpg"))); // NOI18N
        jButton_Eliminar.setText("ELIMINAR");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 160, 30));

        jButton_REGISTRAR.setBackground(new java.awt.Color(0, 102, 204));
        jButton_REGISTRAR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_REGISTRAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Registrar.jpg"))); // NOI18N
        jButton_REGISTRAR.setText("REGISTRAR");
        jButton_REGISTRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_REGISTRARActionPerformed(evt);
            }
        });
        jButton_REGISTRAR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_REGISTRARKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_REGISTRAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 160, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 220, 140));

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Color:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 160, -1));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Talla:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 160, -1));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Cantidad:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 160, -1));

        txt_Talla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_TallaKeyPressed(evt);
            }
        });
        getContentPane().add(txt_Talla, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 220, -1));

        txt_Cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_CantidadKeyPressed(evt);
            }
        });
        getContentPane().add(txt_Cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 220, -1));

        txt_cantidadDefec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cantidadDefecKeyPressed(evt);
            }
        });
        getContentPane().add(txt_cantidadDefec, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 180, -1));

        jComboBox_PRODUCTO.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_PRODUCTO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione producto:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_PRODUCTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_PRODUCTOActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_PRODUCTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 220, -1));

        txt_CODIGO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_CODIGOKeyPressed(evt);
            }
        });
        getContentPane().add(txt_CODIGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 220, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Codigo:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 70, -1));

        btn_buscar.setBackground(new java.awt.Color(153, 153, 153));
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Buscar.jpg"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        btn_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_buscarKeyPressed(evt);
            }
        });
        getContentPane().add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));
        getContentPane().add(txt_NOMBRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 220, -1));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel9.setText("Nombre:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_IngresoProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_IngresoProductosMouseClicked


    }//GEN-LAST:event_jTable_IngresoProductosMouseClicked

    private void jButton_GenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GenerarReporteActionPerformed
        IngresoProductoPDF pdf = new IngresoProductoPDF();
        pdf.DatosIngresoProducto(IDINGRESOPRODUCTO);
        pdf.generarReporteIngresoProductoPDF();
    }//GEN-LAST:event_jButton_GenerarReporteActionPerformed

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed

        String producto = "";
        producto = jComboBox_PRODUCTO.getSelectedItem().toString().trim();
        if (txt_EmpSer.getText().isEmpty() && txt_CODIGO.getText().isEmpty() && txt_NOMBRE.getText().isEmpty() 
                && txt_Color.getText().isEmpty() && txt_Talla.getText().isEmpty() && txt_Cantidad.getText().isEmpty() && txt_cantidadDefec.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "¡Completa todos los campos!");
        } else {

            IngresoProducto ingresoProducto = new IngresoProducto();
            Ctrl_IngresoProducto controlIngresoProducto = new Ctrl_IngresoProducto();

            ingresoProducto.setEMPSERV(txt_EmpSer.getText().trim());
            ingresoProducto.setCODIGO(txt_CODIGO.getText().trim());
            ingresoProducto.setNOMBRE(txt_NOMBRE.getText().trim());
            ingresoProducto.setPRODUCTO(jComboBox_PRODUCTO.getSelectedItem().toString().trim());
            ingresoProducto.setCOLOR(txt_Color.getText().trim());
            ingresoProducto.setTALLA(txt_Talla.getText().trim());
            ingresoProducto.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText().trim()));
            ingresoProducto.setCANTIDADDEFECTUOSA(Integer.parseInt(txt_cantidadDefec.getText().trim()));
            ingresoProducto.setESTADO(1);

            if (controlIngresoProducto.actualizar(ingresoProducto, IDINGRESOPRODUCTO)) {
                JOptionPane.showMessageDialog(null, "¡Datos del Ingreso del producto al almacen actualizado!");
                this.CargarTablaIngresodeProductos();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¡Error al actualizar!");
            }

        }
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed
        Ctrl_IngresoProducto controlIngresoProducto = new Ctrl_IngresoProducto();
        if (IDINGRESOPRODUCTO == 0) {
            JOptionPane.showMessageDialog(null, "¡Seleccione Correctamente!");
        } else {
            if (!controlIngresoProducto.eliminar(IDINGRESOPRODUCTO)) {
                JOptionPane.showMessageDialog(null, "¡Ingreso de Producto Eliminado!");
                this.CargarTablaIngresodeProductos();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¡Error al eliminar Ingreso de Producto!");
            }
        }
    }//GEN-LAST:event_jButton_EliminarActionPerformed

    private void jButton_REGISTRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_REGISTRARActionPerformed
        // TODO add your handling code here:
        IngresoProducto ingresoProducto = new IngresoProducto();
        Ctrl_IngresoProducto controlIngresoProducto = new Ctrl_IngresoProducto();
        String producto = "";
        producto = jComboBox_PRODUCTO.getSelectedItem().toString().trim();
        if (txt_EmpSer.getText().equals("") || txt_CODIGO.getText().equals("") || txt_Color.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            try {
                ingresoProducto.setEMPSERV(txt_EmpSer.getText().trim());
                ingresoProducto.setCODIGO(txt_CODIGO.getText().trim());
                ingresoProducto.setNOMBRE(txt_NOMBRE.getText().trim());
                ingresoProducto.setPRODUCTO(jComboBox_PRODUCTO.getSelectedItem().toString().trim());
                ingresoProducto.setCOLOR(txt_Color.getText().trim());
                ingresoProducto.setTALLA(txt_Talla.getText().trim());
                ingresoProducto.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText()));
                ingresoProducto.setCANTIDADDEFECTUOSA(Integer.parseInt(txt_cantidadDefec.getText()));
                ingresoProducto.setESTADO(1);

                if (controlIngresoProducto.guardar(ingresoProducto)) {
                    JOptionPane.showMessageDialog(null, "Registro Guardado");
                    this.CargarTablaIngresodeProductos();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Guardar");
                }

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }

        }


    }//GEN-LAST:event_jButton_REGISTRARActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        txt_EmpSer.grabFocus();
    }//GEN-LAST:event_formInternalFrameActivated

    private void txt_EmpSerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_EmpSerKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jComboBox_PRODUCTO.grabFocus();
        }
    }//GEN-LAST:event_txt_EmpSerKeyPressed

    private void txt_ColorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ColorKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_Talla.grabFocus();
        }
    }//GEN-LAST:event_txt_ColorKeyPressed

    private void txt_TallaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TallaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_Cantidad.grabFocus();
        }
    }//GEN-LAST:event_txt_TallaKeyPressed

    private void txt_CantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CantidadKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_cantidadDefec.grabFocus();
        }
    }//GEN-LAST:event_txt_CantidadKeyPressed

    private void jButton_REGISTRARKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_REGISTRARKeyPressed
        // TODO add your handling code here:
        jButton_REGISTRARActionPerformed((java.awt.event.ActionEvent) jButton_REGISTRAR.getAction());
    }//GEN-LAST:event_jButton_REGISTRARKeyPressed

    private void txt_cantidadDefecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadDefecKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton_REGISTRAR.grabFocus();
        }
    }//GEN-LAST:event_txt_cantidadDefecKeyPressed

    private void jComboBox_PRODUCTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_PRODUCTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_PRODUCTOActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        String buscarcodigoProducto = txt_CODIGO.getText().trim();
        Connection cn = Conexion.conectar();
        String sql = "select NOMBRE,COLOR,TALLA from tb_producto WHERE CODIGO = '" + buscarcodigoProducto + "'";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                
                txt_NOMBRE.setText(rs.getString("NOMBRE"));
                txt_Color.setText(rs.getString("COLOR"));
                txt_Talla.setText(rs.getString("TALLA"));
            } else {
                jComboBox_PRODUCTO.setSelectedItem("Seleccione PRODUCTO:");
                JOptionPane.showMessageDialog(null, "¡Codigo de producto incorrecta o no encontrado!");
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¡Error al buscar producto!, " + e);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void txt_CODIGOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CODIGOKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btn_buscar.grabFocus();
        }
    }//GEN-LAST:event_txt_CODIGOKeyPressed

    private void btn_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_buscarKeyPressed
        btn_buscarActionPerformed((java.awt.event.ActionEvent)btn_buscar.getAction());
    }//GEN-LAST:event_btn_buscarKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JButton jButton_GenerarReporte;
    private javax.swing.JButton jButton_REGISTRAR;
    private javax.swing.JComboBox<String> jComboBox_PRODUCTO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_IngresoProductos;
    private javax.swing.JTextField txt_CODIGO;
    private javax.swing.JTextField txt_Cantidad;
    private javax.swing.JTextField txt_Color;
    private javax.swing.JTextField txt_EmpSer;
    private javax.swing.JTextField txt_NOMBRE;
    private javax.swing.JTextField txt_Talla;
    private javax.swing.JTextField txt_cantidadDefec;
    // End of variables declaration//GEN-END:variables

    private void Limpiar() {
        txt_EmpSer.setText("");
        txt_CODIGO.setText("");
        jComboBox_PRODUCTO.setSelectedItem("Seleccione producto:");
        txt_Color.setText("");
        txt_Talla.setText("");
        txt_Cantidad.setText("");
        txt_cantidadDefec.setText("");
    }

    private void CargarTablaIngresodeProductos() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select IDINGRESOPRODUCTO, EMPSERV, CODIGO, NOMBRE, PRODUCTO, COLOR, TALLA, CANTIDAD, CANTIDADDEFECTUOSA, ESTADO from INGPRODTABLA";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterIngresoProducto.jTable_IngresoProductos = new JTable(model);
            InterIngresoProducto.jScrollPane1.setViewportView(InterIngresoProducto.jTable_IngresoProductos);

            model.addColumn("N°");//ID
            model.addColumn("Empleado/Servicio");
            model.addColumn("CODIGO");
            model.addColumn("NOMBRE");
            model.addColumn("PRODUCTO");
            model.addColumn("COLOR");
            model.addColumn("TALLA");
            model.addColumn("CANTIDAD");
            model.addColumn("CANTIDADDEFECTUOSA");
            model.addColumn("ESTADO");

            while (rs.next()) {

                Object fila[] = new Object[10];
                for (int i = 0; i < 10; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Ingreso de Productos: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_IngresoProductos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_IngresoProductos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDINGRESOPRODUCTO = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosIngresoProductoSeleccionado(IDINGRESOPRODUCTO);//metodo
                }
            }
        });
    }

    private void EnviarDatosIngresoProductoSeleccionado(int IDINGRESOPRODUCTO) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from INGPRODTABLA where IDINGRESOPRODUCTO = '" + IDINGRESOPRODUCTO + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_EmpSer.setText(rs.getString("EMPSERV"));
                txt_CODIGO.setText(rs.getString("CODIGO"));
                txt_NOMBRE.setText(rs.getString("NOMBRE"));
                int idprod = rs.getInt("IDINGRESOPRODUCTO");
                jComboBox_PRODUCTO.setSelectedItem(relacionarProducto(idprod));
                txt_Color.setText(rs.getString("COLOR"));
                txt_Talla.setText(rs.getString("TALLA"));
                txt_Cantidad.setText(rs.getString("CANTIDAD"));
                txt_cantidadDefec.setText(rs.getString("CANTIDADDEFECTUOSA"));

            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar Ingreso de Productos: " + e);
        }
    }

    String NombreProducto = "";

    private String relacionarProducto(int IDPRODUCTO) {

        String sql = "select NOMBRE from tb_producto where IDPRODUCTO = '" + IDPRODUCTO + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreProducto = rs.getString("NOMBRE");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¡Error al obtener el id del producto!");
        }
        return NombreProducto;
    }

    private int IdProducto() {
        String sql = "select * from tb_producto where NOMBRE = '" + this.jComboBox_PRODUCTO.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIDPPRODUCTOCombo = rs.getInt("IDPRODUCTO");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener IDPRODUCTO");
        }
        return obtenerIDPPRODUCTOCombo;
    }

    private void CargarComboProductos() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_categoria_producto";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_PRODUCTO.removeAllItems();
            jComboBox_PRODUCTO.addItem("Seleccione Producto:");
            while (rs.next()) {
                jComboBox_PRODUCTO.addItem(rs.getString("NOMBRE"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¡Error al cargar producto, !" + e);
        }
    }

}
