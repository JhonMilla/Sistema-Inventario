/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.IngresoRecursos;
import controlador.Ctrl_IngresoRecursos;
import controlador.IngresoMateriaPrimaPDF;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import modelo.Recursos;
/**
 *
 * @author XIOMARA
 */
public class InterIngresoRecurso extends javax.swing.JInternalFrame {
    
    private int IDINGRESORECURSOS;
    int obtenerIDPROVEEDORCombo = 0;
    int obtenerIDRECURSOCombo = 0; 
    
    Recursos pro = new Recursos();
    Ctrl_IngresoRecursos proDao= new Ctrl_IngresoRecursos();
    /**
     * Creates new form InterIngresoRecurso
     */
    public InterIngresoRecurso() {
        initComponents();
        this.setSize(new Dimension(750, 600));
        this.setTitle("Ingreso de Materia Prima");
        this.CargarComboProveedor();
        this.CargarTablaIngresoRecursos();
        this.CargarComboRecursos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_IngresoRecursos = new javax.swing.JTable();
        jButton_GenerarReporte = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Eliminar = new javax.swing.JButton();
        jButton_REGISTRAR = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_Cantidad = new javax.swing.JTextField();
        txt_Color = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_Descripcion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox_PROVEEDOR = new javax.swing.JComboBox<>();
        jComboBox_Recursos = new javax.swing.JComboBox<>();
        txt_CODIGO = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_Nombre = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Ingreso Materia Prima");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Proveedores:");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Materia Prima:");

        jTable_IngresoRecursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_IngresoRecursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_IngresoRecursosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_IngresoRecursos);

        jButton_GenerarReporte.setBackground(new java.awt.Color(51, 255, 255));
        jButton_GenerarReporte.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_GenerarReporte.setText("Generar Reporte");
        jButton_GenerarReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_GenerarReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_GenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GenerarReporteActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Actualizar.setBackground(new java.awt.Color(0, 204, 0));
        jButton_Actualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Actualizar.jpg"))); // NOI18N
        jButton_Actualizar.setText("ACTUALIZAR");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        jButton_Eliminar.setBackground(new java.awt.Color(204, 0, 0));
        jButton_Eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Eliminar.jpg"))); // NOI18N
        jButton_Eliminar.setText("ELIMINAR");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 160, 30));

        jButton_REGISTRAR.setBackground(new java.awt.Color(0, 102, 204));
        jButton_REGISTRAR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_REGISTRAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Registrar.jpg"))); // NOI18N
        jButton_REGISTRAR.setText("REGISTRAR");
        jButton_REGISTRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_REGISTRARActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_REGISTRAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 160, 30));

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Cantidad:");

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Color:");

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Descripci√≥n:");

        jComboBox_PROVEEDOR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_PROVEEDOR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione proveedor:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_PROVEEDOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_PROVEEDORActionPerformed(evt);
            }
        });

        jComboBox_Recursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione materia prima:", "Item 1", "Item 2", "Item 3", "Item 4" }));

        txt_CODIGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CODIGOActionPerformed(evt);
            }
        });
        txt_CODIGO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_CODIGOKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel4.setText("Codigo:");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel8.setText("Nombre:");

        btn_buscar.setBackground(new java.awt.Color(153, 153, 153));
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Buscar.jpg"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_GenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_Nombre, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_CODIGO, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox_Recursos, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboBox_PROVEEDOR, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox_PROVEEDOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_CODIGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(btn_buscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_Recursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_Color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_GenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_IngresoRecursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_IngresoRecursosMouseClicked

    }//GEN-LAST:event_jTable_IngresoRecursosMouseClicked

    private void jButton_GenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GenerarReporteActionPerformed

        IngresoMateriaPrimaPDF pdf = new IngresoMateriaPrimaPDF();
        pdf.DatosSalidaRecursos(IDINGRESORECURSOS);
        pdf.generarReporteIngresoMateriaPrimaPDF(); 
    }//GEN-LAST:event_jButton_GenerarReporteActionPerformed

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed

        IngresoRecursos ingresoRecursos = new IngresoRecursos();
        Ctrl_IngresoRecursos controlIngresoRecursos = new Ctrl_IngresoRecursos();
        String proveedor="";
        String recursos="";
        proveedor=jComboBox_PROVEEDOR.getSelectedItem().toString().trim();
        recursos=jComboBox_Recursos.getSelectedItem().toString().trim();
        if (txt_CODIGO.getText().equals("") || txt_Nombre.getText().equals("")
                || txt_Color.getText().equals("") || txt_Descripcion.getText().equals("") || txt_Cantidad.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }else{
            try {
                this.IdProveedor();
                this.IdRecurso();
                ingresoRecursos.setPROVEEDOR(jComboBox_PROVEEDOR.getSelectedItem().toString().trim());
                ingresoRecursos.setCODIGO(txt_CODIGO.getText().trim());
                ingresoRecursos.setNOMBRE(txt_Nombre.getText().trim());
                ingresoRecursos.setRECURSO(jComboBox_Recursos.getSelectedItem().toString().trim());
                ingresoRecursos.setDESCRIPCION(txt_Descripcion.getText().trim());
                ingresoRecursos.setCOLOR(txt_Color.getText().trim());
                ingresoRecursos.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText()));
                ingresoRecursos.setESTADO(1);

                if (controlIngresoRecursos.actualizar(ingresoRecursos,IDINGRESORECURSOS)) {
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");                  
                    this.CargarTablaIngresoRecursos();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Guardar");
                }

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }

        }
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed
        Ctrl_IngresoRecursos controlIngresoRecursos = new Ctrl_IngresoRecursos();
        if (IDINGRESORECURSOS == 0) {
            JOptionPane.showMessageDialog(null, "¬°Seleccione Correctamente!");
        } else {
            if (!controlIngresoRecursos.eliminar(IDINGRESORECURSOS)) {
                JOptionPane.showMessageDialog(null, "¬°Ingreso de recurso Eliminado!");
                this.CargarTablaIngresoRecursos();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¬°Error al eliminar ingreso de recurso!");
            }
        }
    }//GEN-LAST:event_jButton_EliminarActionPerformed

    private void jButton_REGISTRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_REGISTRARActionPerformed
        // TODO add your handling code here:
        IngresoRecursos ingresoRecursos = new IngresoRecursos();
        Ctrl_IngresoRecursos controlIngresoRecursos = new Ctrl_IngresoRecursos();
        String proveedor="";
        String recursos="";
        proveedor=jComboBox_PROVEEDOR.getSelectedItem().toString().trim();
        recursos=jComboBox_Recursos.getSelectedItem().toString().trim();
        if (txt_CODIGO.getText().equals("") || txt_Nombre.getText().equals("") || txt_Color.getText().equals("")
                || txt_Descripcion.getText().equals("") || txt_Cantidad.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }else{
            try {
                ingresoRecursos.setPROVEEDOR(jComboBox_PROVEEDOR.getSelectedItem().toString().trim());
                ingresoRecursos.setCODIGO(txt_CODIGO.getText().trim());
                ingresoRecursos.setNOMBRE(txt_Nombre.getText().trim());
                ingresoRecursos.setRECURSO(jComboBox_Recursos.getSelectedItem().toString().trim());
                ingresoRecursos.setDESCRIPCION(txt_Descripcion.getText().trim());
                ingresoRecursos.setCOLOR(txt_Color.getText().trim());
                ingresoRecursos.setCANTIDAD(Integer.parseInt(txt_Cantidad.getText()));
                ingresoRecursos.setESTADO(1);

                if (controlIngresoRecursos.guardar(ingresoRecursos)) {
                    JOptionPane.showMessageDialog(null, "Registro Guardado");
                    CargarTablaIngresoRecursos();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Guardar");
                }

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }

        }

    }//GEN-LAST:event_jButton_REGISTRARActionPerformed

    private void jComboBox_PROVEEDORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_PROVEEDORActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_PROVEEDORActionPerformed

    private void txt_CODIGOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CODIGOKeyPressed

    }//GEN-LAST:event_txt_CODIGOKeyPressed

    private void txt_CODIGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CODIGOActionPerformed
        
    }//GEN-LAST:event_txt_CODIGOActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        String buscarcodigo=txt_CODIGO.getText().trim();
        Connection cn = Conexion.conectar();
            String sql = "select p.NOMBRE,c.NOMBRE,p.DESCRIPCION,p.COLOR from tb_recursos as p, tb_categoria_recursos as c where p.IDCATEGORIARECURSOS=c.IDCATEGORIARECURSOS and CODIGO = '" + buscarcodigo + "'";
            Statement st;
            try {
                st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {               
                txt_Nombre.setText(rs.getString("NOMBRE"));
                //jComboBox_Recursos.setSelectedItem(rs.getString("NOMBRE"));
                txt_Descripcion.setText(rs.getString("DESCRIPCION"));
                txt_Color.setText(rs.getString("COLOR"));   
            }else{
                txt_Nombre.setText("Seleecione Nombre:");
                JOptionPane.showMessageDialog(null, "¬°Codigo de producto incorrecta o no encontrado!");
            }
                cn.close();
            }catch(SQLException e){
                System.out.println("¬°Error al buscar producto!, " + e);
            }
    }//GEN-LAST:event_btn_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JButton jButton_GenerarReporte;
    private javax.swing.JButton jButton_REGISTRAR;
    private javax.swing.JComboBox<String> jComboBox_PROVEEDOR;
    private javax.swing.JComboBox<String> jComboBox_Recursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_IngresoRecursos;
    private javax.swing.JTextField txt_CODIGO;
    private javax.swing.JTextField txt_Cantidad;
    private javax.swing.JTextField txt_Color;
    private javax.swing.JTextField txt_Descripcion;
    private javax.swing.JTextField txt_Nombre;
    // End of variables declaration//GEN-END:variables
  
    private void Limpiar() {
        txt_CODIGO.setText("");
        txt_Nombre.setText("");
        jComboBox_PROVEEDOR.setSelectedItem("Seleccione proveedor:");
        jComboBox_Recursos.setSelectedItem("Seleccione proveedor:");
        txt_Cantidad.setText("");
        txt_Color.setText("");
        txt_Descripcion.setText("");
    }
    
    String NombreProveedor="";
    String NombreRecurso="";
    
    private void CargarTablaIngresoRecursos() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select IDINGRESORECURSOS, PROVEEDOR, CODIGO, NOMBRE, RECURSO, DESCRIPCION, COLOR, CANTIDAD, ESTADO from INGRECUTABLA";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterIngresoRecurso.jTable_IngresoRecursos = new JTable(model);
            InterIngresoRecurso.jScrollPane1.setViewportView(InterIngresoRecurso.jTable_IngresoRecursos);

            model.addColumn("N¬∞");//ID
            model.addColumn("PROVEEDOR");
            model.addColumn("CODIGO");
            model.addColumn("NOMBRE");
            model.addColumn("RECURSO");
            model.addColumn("DESCRIPCION");
            model.addColumn("COLOR");
            model.addColumn("CANTIDAD");
            model.addColumn("ESTADO");

            while (rs.next()) {

                Object fila[] = new Object[9];
                for (int i = 0; i < 9; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Ingreso de Recursos: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_IngresoRecursos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_IngresoRecursos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDINGRESORECURSOS = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosIngresoRecursoSeleccionado(IDINGRESORECURSOS);//metodo
                }
            }
        });
    }

    private void EnviarDatosIngresoRecursoSeleccionado(int IDINGRESORECURSOS) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from INGRECUTABLA where IDINGRESORECURSOS = '" + IDINGRESORECURSOS + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                int idProvee = rs.getInt("IDINGRESORECURSOS");
                int idRecurso = rs.getInt("IDINGRESORECURSOS");
                jComboBox_PROVEEDOR.setSelectedItem(relacionarProveedor(idProvee));
                txt_CODIGO.setText(rs.getString("CODIGO"));
                txt_Nombre.setText(rs.getString("NOMBRE"));
                jComboBox_Recursos.setSelectedItem(relacionarRecursos(idRecurso));
                txt_Color.setText(rs.getString("COLOR"));
                txt_Descripcion.setText(rs.getString("DESCRIPCION"));
                txt_Cantidad.setText(rs.getString("CANTIDAD"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar Ingreso de Recurso: " + e);
        }
    }

    private void CargarComboProveedor() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_proveedores";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_PROVEEDOR.removeAllItems();
            jComboBox_PROVEEDOR.addItem("Seleccione Proveedor:");
            while (rs.next()) {
                jComboBox_PROVEEDOR.addItem(rs.getString("NOMBRE"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¬°Error al cargar proveedor, !" + e);
        }
    }
    
    private void CargarComboRecursos() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_categoria_recursos";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_Recursos.removeAllItems();
            jComboBox_Recursos.addItem("Seleccione Recurso:");
            while (rs.next()) {
                jComboBox_Recursos.addItem(rs.getString("NOMBRE"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("¬°Error al cargar recursos, !" + e);
        }
    }
    
    private String relacionarProveedor(int IDPROVEEDORES) {

        String sql = "select NOMBRE from tb_proveedores where IDPROVEEDORES = '" + IDPROVEEDORES + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreProveedor = rs.getString("NOMBRE");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¬°Error al obtener el id de la categoria!");
        }
        return NombreProveedor;
    }
    
    private String relacionarRecursos(int IDRECURSO) {

        String sql = "select NOMBRE from tb_recursos where IDRECURSO = '" + IDRECURSO + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                NombreRecurso = rs.getString("NOMBRE");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("¬°Error al obtener el id de la categoria!");
        }
        return NombreRecurso;
    }

    /**
     *
     * Metodo para obtener id categoria
     */
    private int IdProveedor() {
        String sql = "select * from tb_proveedores where NOMBRE = '" + this.jComboBox_PROVEEDOR.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIDPROVEEDORCombo = rs.getInt("IDPROVEEDORES");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener IDPROVEEDORES");
        }
        return obtenerIDPROVEEDORCombo;
    }
    
    private int IdRecurso() {
        String sql = "select * from tb_recursos where NOMBRE = '" + this.jComboBox_Recursos.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIDRECURSOCombo = rs.getInt("IDRECURSO");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener IDRECURSO");
        }
        return obtenerIDRECURSOCombo;
    }
}
